name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Triggers on main branch changes
  pull_request:
    branches:
      - main

jobs:
  build-test:
    name: Build & Test .NET App
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0'

      - name: Restore dependencies
        run: dotnet restore ./TodoApi

      - name: Build Project
        run: dotnet build --no-restore ./TodoApi

      - name: Run Tests
        run: dotnet test --configuration Release --no-restore --verbosity normal ./TodoApi

  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    needs: build-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run CodeQL Security Scan
        uses: github/codeql-action/init@v3
        with:
          languages: 'csharp'

      - name: Perform Trivy Scan on Repository
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          format: 'table'
          severity: 'CRITICAL,HIGH'

  build-push-docker:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: security-scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v3 

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with: 
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/todoapi:${{ github.sha }} .
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/todoapi:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/todoapi:latest

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/todoapi:${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/todoapi:latest

      - name: Install Cosign
        run: |
          COSIGN_VERSION=$(curl -s https://api.github.com/repos/sigstore/cosign/releases/latest | jq -r '.tag_name')
          curl -LO https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64
          chmod +x cosign-linux-amd64
          sudo mv cosign-linux-amd64 /usr/local/bin/cosign

      - name: Sign Image with Cosign (Keyless)
        env:
          COSIGN_EXPERIMENTAL: "true"  # Enables keyless signing
        run: |
          cosign sign --yes ${{ secrets.DOCKERHUB_USERNAME }}/todoapi:${{ github.sha }}

